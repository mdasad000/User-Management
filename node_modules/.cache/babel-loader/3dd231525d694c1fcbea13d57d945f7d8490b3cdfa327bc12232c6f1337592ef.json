{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ateek Ansari\\\\OneDrive\\\\Desktop\\\\Rct Pro\\\\user-management\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUsers, addUser, updateUser, deleteUser } from './services/userService';\nimport UserList from './components/UserList';\nimport UserForm from './components/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Fetch todo item from JSONPlaceholder API\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => {\n      console.log('Fetched Todo:', json);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // Empty dependency array ensures it runs only once when the component mounts\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await getUsers();\n        setUsers(data);\n      } catch (error) {\n        console.error('Failed to fetch users', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleAddUser = async user => {\n    try {\n      const newUser = await addUser(user);\n      setUsers([...users, newUser]);\n    } catch (error) {\n      console.error('Failed to add user', error);\n    }\n  };\n  const handleUpdateUser = async user => {\n    try {\n      const updatedUser = await updateUser(selectedUser.id, user);\n      setUsers(users.map(u => u.id === updatedUser.id ? updatedUser : u));\n      setSelectedUser(null);\n    } catch (error) {\n      console.error('Failed to update user', error);\n    }\n  };\n  const handleDeleteUser = async id => {\n    try {\n      await deleteUser(id);\n      setUsers(users.filter(user => user.id !== id));\n    } catch (error) {\n      console.error('Failed to delete user', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserForm, {\n      user: selectedUser,\n      onSubmit: selectedUser ? handleUpdateUser : handleAddUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onEdit: setSelectedUser,\n      onDelete: handleDeleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ozi/SQoUYXLozFpMWYE3UfBQGSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getUsers","addUser","updateUser","deleteUser","UserList","UserForm","jsxDEV","_jsxDEV","App","_s","users","setUsers","selectedUser","setSelectedUser","fetch","then","response","json","console","log","catch","error","fetchUsers","data","handleAddUser","user","newUser","handleUpdateUser","updatedUser","id","map","u","handleDeleteUser","filter","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Ateek Ansari/OneDrive/Desktop/Rct Pro/user-management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers, addUser, updateUser, deleteUser } from './services/userService';\nimport UserList from './components/UserList';\nimport UserForm from './components/UserForm';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Fetch todo item from JSONPlaceholder API\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        console.log('Fetched Todo:', json);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []); // Empty dependency array ensures it runs only once when the component mounts\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await getUsers();\n        setUsers(data);\n      } catch (error) {\n        console.error('Failed to fetch users', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  const handleAddUser = async (user) => {\n    try {\n      const newUser = await addUser(user);\n      setUsers([...users, newUser]);\n    } catch (error) {\n      console.error('Failed to add user', error);\n    }\n  };\n\n  const handleUpdateUser = async (user) => {\n    try {\n      const updatedUser = await updateUser(selectedUser.id, user);\n      setUsers(users.map((u) => (u.id === updatedUser.id ? updatedUser : u)));\n      setSelectedUser(null);\n    } catch (error) {\n      console.error('Failed to update user', error);\n    }\n  };\n\n  const handleDeleteUser = async (id) => {\n    try {\n      await deleteUser(id);\n      setUsers(users.filter((user) => user.id !== id));\n    } catch (error) {\n      console.error('Failed to delete user', error);\n    }\n  };\n\n  return (\n    <div>\n      <UserForm user={selectedUser} onSubmit={selectedUser ? handleUpdateUser : handleAddUser} />\n      <UserList users={users} onEdit={setSelectedUser} onDelete={handleDeleteUser} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}